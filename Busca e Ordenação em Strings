function mergeSort(arr) {
    if (arr.length <= 1) return arr;

    const mid = Math.floor(arr.length / 2);
    const left = mergeSort(arr.slice(0, mid));
    const right = mergeSort(arr.slice(mid));

    return merge(left, right);
}

function merge(left, right) {
    let result = [];
    let i = 0;
    let j = 0;

    while (i < left.length && j < right.length) {
        if (left[i].localeCompare(right[j]) < 0) {
            result.push(left[i]);
            i++;
        } else {
            result.push(right[j]);
            j++;
        }
    }

    return result.concat(left.slice(i), right.slice(j));
}

// Testando com uma lista de palavras
let words = ["banana", "apple", "orange", "grape", "kiwi"];
let sortedWords = mergeSort(words);
console.log(sortedWords);


PARTE 2

function quickSort(arr) {
    if (arr.length <= 1) return arr;

    const pivot = arr[arr.length - 1];
    const left = [];
    const right = [];

    for (let i = 0; i < arr.length - 1; i++) {
        if (arr[i].localeCompare(pivot) < 0) {
            left.push(arr[i]);
        } else {
            right.push(arr[i]);
        }
    }

    return [...quickSort(left), pivot, ...quickSort(right)];
}

// Testando com uma lista de palavras
let wordsQuickSort = ["banana", "apple", "orange", "grape", "kiwi"];
let sortedWordsQuickSort = quickSort(wordsQuickSort);
console.log(sortedWordsQuickSort);


Parte 3

function binarySearch(arr, target) {
    let left = 0;
    let right = arr.length - 1;

    while (left <= right) {
        const mid = Math.floor((left + right) / 2);
        const comparison = arr[mid].localeCompare(target);

        if (comparison === 0) {
            return mid; // A palavra foi encontrada
        } else if (comparison < 0) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return -1; // A palavra não foi encontrada
}

// Testando a busca binária em uma lista de palavras ordenadas
let targetWord = "orange";
let index = binarySearch(sortedWords, targetWord);
console.log(index !== -1 ? `A palavra "${targetWord}" foi encontrada no índice ${index}.` : `A palavra "${targetWord}" não foi encontrada.`);
