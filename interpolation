function interpolationSearch(arr, target) {
    let left = 0;
    let right = arr.length - 1;

    while (left <= right && target >= arr[left] && target <= arr[right]) {
        if (left === right) {
            if (arr[left] === target) return left;
            return -1;
        }

        const pos = left + Math.floor(
            ((target - arr[left]) * (right - left)) / (arr[right] - arr[left])
        );

        if (arr[pos] === target) {
            return pos; 
        } else if (arr[pos] < target) {
            left = pos + 1;
        } else {
            right = pos - 1; 
        }
    }

    return -1; 
}

//////////
Lista com Intervalos Uniformes
const arrUniform = [10, 20, 30, 40, 50, 60, 70];
const targetUniform = 50;
console.log(interpolationSearch(arrUniform, targetUniform)); // Saída: 4

Lista com Intervalos Não Uniformes
const arrNonUniform = [5, 10, 30, 60, 120, 250, 500];
const targetNonUniform = 60;
console.log(interpolationSearch(arrNonUniform, targetNonUniform)); // Saída: 3

comparação
function binarySearch(arr, target) {
    let left = 0;
    let right = arr.length - 1;

    while (left <= right) {
        const mid = Math.floor((left + right) / 2);

        if (arr[mid] === target) {
            return mid;
        } else if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return -1;
}


